@using System.Numerics
<div @attributes="Attributes">
    <svg viewBox="0 0 @SpriteWidth @SpriteHeight" xmlns="http://www.w3.org/2000/svg"
         width="100%" height="100%"
         preserveAspectRatio="none"
         style="overflow: hidden;">
        <defs>
            <style>
                @@keyframes @animationName {
                    @for (var i = 0; i < TotalImages; i++)
                    {
                        var offset = GetOffsetForImage(i);
                        var offsetX = offset.X;
                        var offsetY = offset.Y;

                        <text>
                            @($"{i * (100f / TotalImages)}%") {
                                x: -@(offsetX)px;
                                y: -@(offsetY)px;
                            }
                        </text>
                    }
                }
            </style>
        </defs>
        <image href="@Url"
               style="animation: @animationName @(Duration.TotalSeconds)s step-end @(Iterations?.ToString() ?? "infinite")" />
    </svg>
</div>
@code {
    private readonly string animationName = $"a{Guid.NewGuid():N}";

    private Vector2 GetOffsetForImage(int imageIndex)
    {
        var row = imageIndex / ImagesPerRow;
        var column = imageIndex % ImagesPerRow;

        var offsetX = OffsetX + column * (SpriteWidth + GapX);
        var offsetY = OffsetY + row * (SpriteHeight + GapY);

        return new Vector2(offsetX, offsetY);
    }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> Attributes { get; set; }

    [Parameter]
    public string Url { get; set; }

    [Parameter]
    public int SpriteWidth { get; set; }

    [Parameter]
    public int SpriteHeight { get; set; }

    [Parameter]
    public int OffsetX { get; set; }

    [Parameter]
    public int OffsetY { get; set; }

    [Parameter]
    public int GapX { get; set; }

    [Parameter]
    public int GapY { get; set; }

    [Parameter]
    public int ImagesPerRow { get; set; }

    [Parameter]
    public int TotalImages { get; set; }

    [Parameter]
    public TimeSpan Duration { get; set; }

    [Parameter]
    public int? Iterations { get; set; }
}
